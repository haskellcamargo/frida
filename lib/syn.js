// Generated by LiveScript 1.3.1
var map, objectMapper, convert, verify, x$;
map = require("prelude-ls").map;
objectMapper = function(obj, fn){
  var i$, ref$, len$, v, results$ = [];
  for (i$ = 0, len$ = (ref$ = Object.getOwnPropertyNames(obj)).length; i$ < len$; ++i$) {
    v = ref$[i$];
    results$.push(fn(v));
  }
  return results$;
};
convert = function(input){
  var template, acc;
  template = [];
  if (input instanceof Array) {
    template.push(map(convert)(
    input).join(' '));
    template.unshift('(');
    template.push(')');
  } else if (typeof input === "string") {
    template.push(input.length === 1
      ? "'" + input.replace(/\n/g, '\\n') + "'"
      : '"' + input.replace(/\n/g, '\\n' + '"'));
  } else if (typeof input === "function") {
    template.push("(-> ...)");
  } else if (input instanceof Object) {
    acc = [];
    objectMapper(input, function(x){
      return acc.push("\"" + x + "\":" + convert(input[x]));
    });
    template.push(acc.join(' '));
    template.unshift('{');
    template.push('}');
  } else if (input === undefined) {
    template.push("undefined");
  } else {
    template.push(input);
  }
  return template.join("");
};
verify = function(input){
  var i, i$, len$, x;
  i = 0;
  for (i$ = 0, len$ = input.length; i$ < len$; ++i$) {
    x = input[i$];
    switch (x) {
    case '(':
    case '{':
      i++;
      break;
    case ')':
    case '}':
      i--;
    }
  }
  return i;
};
x$ = exports;
x$.verify = verify;
x$.convert = convert;