// Generated by LiveScript 1.3.1
var frida, fns;
frida = require('frida');
fns = {
  lambda: function(input, context){
    return function(lambdaArgs){
      var lambdaScope;
      lambdaScope = (function(){
        switch (false) {
        case input.length !== 2:
          return {};
        default:
          return input[1].reduce(function(acc, x, i){
            acc[x.value] = lambdaArgs[i];
            return acc;
          }, x);
        }
      }());
      return frida.interpret(input[input.length - 1], new frida.Context(lambdaScope, context));
    };
  },
  'let': function(input, context){
    var letContext;
    letContext = input[1].reduce(function(acc, x){
      acc.scope[x[0].value] = frida.interpret(x[1], context);
      return acc;
    }, new frida.Context({}, context));
    return frida.interpret(input[2], letContext);
  },
  fn: function(input, context){
    var v;
    v = frida.interpret(input[2]);
    context.set(input[1].value, v);
    return v;
  },
  'if': function(input, context){
    if (frida.interpret(input[1])) {
      return frida.interpret(input[2], context);
    } else {
      if (input[2] != null) {
        return frida.interpret(input[3], context);
      }
    }
  }
};
module.exports = fns;
module.exports["~"] = fns.lambda;